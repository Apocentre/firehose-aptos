// Copyright (c) Aptos
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: sf/aptos/type/v1/type.proto

package pbaptos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transaction_TransactionType int32

const (
	Transaction_GENESIS          Transaction_TransactionType = 0
	Transaction_BLOCK_METADATA   Transaction_TransactionType = 1
	Transaction_STATE_CHECKPOINT Transaction_TransactionType = 2
	Transaction_USER             Transaction_TransactionType = 3
)

// Enum value maps for Transaction_TransactionType.
var (
	Transaction_TransactionType_name = map[int32]string{
		0: "GENESIS",
		1: "BLOCK_METADATA",
		2: "STATE_CHECKPOINT",
		3: "USER",
	}
	Transaction_TransactionType_value = map[string]int32{
		"GENESIS":          0,
		"BLOCK_METADATA":   1,
		"STATE_CHECKPOINT": 2,
		"USER":             3,
	}
)

func (x Transaction_TransactionType) Enum() *Transaction_TransactionType {
	p := new(Transaction_TransactionType)
	*p = x
	return p
}

func (x Transaction_TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[0].Descriptor()
}

func (Transaction_TransactionType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[0]
}

func (x Transaction_TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_TransactionType.Descriptor instead.
func (Transaction_TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{0, 0}
}

type WriteSet_WriteSetType int32

const (
	WriteSet_SCRIPT_WRITE_SET WriteSet_WriteSetType = 0
	WriteSet_DIRECT_WRITE_SET WriteSet_WriteSetType = 1
)

// Enum value maps for WriteSet_WriteSetType.
var (
	WriteSet_WriteSetType_name = map[int32]string{
		0: "SCRIPT_WRITE_SET",
		1: "DIRECT_WRITE_SET",
	}
	WriteSet_WriteSetType_value = map[string]int32{
		"SCRIPT_WRITE_SET": 0,
		"DIRECT_WRITE_SET": 1,
	}
)

func (x WriteSet_WriteSetType) Enum() *WriteSet_WriteSetType {
	p := new(WriteSet_WriteSetType)
	*p = x
	return p
}

func (x WriteSet_WriteSetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteSet_WriteSetType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[1].Descriptor()
}

func (WriteSet_WriteSetType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[1]
}

func (x WriteSet_WriteSetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WriteSet_WriteSetType.Descriptor instead.
func (WriteSet_WriteSetType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{9, 0}
}

type WriteSetChange_WriteSetChangeType int32

const (
	WriteSetChange_DELETE_MODULE     WriteSetChange_WriteSetChangeType = 0
	WriteSetChange_DELETE_RESOURCE   WriteSetChange_WriteSetChangeType = 1
	WriteSetChange_DELETE_TABLE_ITEM WriteSetChange_WriteSetChangeType = 2
	WriteSetChange_WRITE_MODULE      WriteSetChange_WriteSetChangeType = 3
	WriteSetChange_WRITE_RESOURCE    WriteSetChange_WriteSetChangeType = 4
	WriteSetChange_WRITE_TABLE_ITEM  WriteSetChange_WriteSetChangeType = 5
)

// Enum value maps for WriteSetChange_WriteSetChangeType.
var (
	WriteSetChange_WriteSetChangeType_name = map[int32]string{
		0: "DELETE_MODULE",
		1: "DELETE_RESOURCE",
		2: "DELETE_TABLE_ITEM",
		3: "WRITE_MODULE",
		4: "WRITE_RESOURCE",
		5: "WRITE_TABLE_ITEM",
	}
	WriteSetChange_WriteSetChangeType_value = map[string]int32{
		"DELETE_MODULE":     0,
		"DELETE_RESOURCE":   1,
		"DELETE_TABLE_ITEM": 2,
		"WRITE_MODULE":      3,
		"WRITE_RESOURCE":    4,
		"WRITE_TABLE_ITEM":  5,
	}
)

func (x WriteSetChange_WriteSetChangeType) Enum() *WriteSetChange_WriteSetChangeType {
	p := new(WriteSetChange_WriteSetChangeType)
	*p = x
	return p
}

func (x WriteSetChange_WriteSetChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteSetChange_WriteSetChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[2].Descriptor()
}

func (WriteSetChange_WriteSetChangeType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[2]
}

func (x WriteSetChange_WriteSetChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WriteSetChange_WriteSetChangeType.Descriptor instead.
func (WriteSetChange_WriteSetChangeType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{12, 0}
}

type TransactionPayload_PayloadType int32

const (
	TransactionPayload_SCRIPT_FUNCTION_PAYLOAD TransactionPayload_PayloadType = 0
	TransactionPayload_SCRIPT_PAYLOAD          TransactionPayload_PayloadType = 1
	TransactionPayload_MODULE_BUNDLE_PAYLOAD   TransactionPayload_PayloadType = 2
	TransactionPayload_WRITE_SET_PAYLOAD       TransactionPayload_PayloadType = 3
)

// Enum value maps for TransactionPayload_PayloadType.
var (
	TransactionPayload_PayloadType_name = map[int32]string{
		0: "SCRIPT_FUNCTION_PAYLOAD",
		1: "SCRIPT_PAYLOAD",
		2: "MODULE_BUNDLE_PAYLOAD",
		3: "WRITE_SET_PAYLOAD",
	}
	TransactionPayload_PayloadType_value = map[string]int32{
		"SCRIPT_FUNCTION_PAYLOAD": 0,
		"SCRIPT_PAYLOAD":          1,
		"MODULE_BUNDLE_PAYLOAD":   2,
		"WRITE_SET_PAYLOAD":       3,
	}
)

func (x TransactionPayload_PayloadType) Enum() *TransactionPayload_PayloadType {
	p := new(TransactionPayload_PayloadType)
	*p = x
	return p
}

func (x TransactionPayload_PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionPayload_PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[3].Descriptor()
}

func (TransactionPayload_PayloadType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[3]
}

func (x TransactionPayload_PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionPayload_PayloadType.Descriptor instead.
func (TransactionPayload_PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{19, 0}
}

type Signature_SignatureType int32

const (
	Signature_ED          Signature_SignatureType = 0
	Signature_MULTI_ED    Signature_SignatureType = 1
	Signature_MULTI_AGENT Signature_SignatureType = 2
)

// Enum value maps for Signature_SignatureType.
var (
	Signature_SignatureType_name = map[int32]string{
		0: "ED",
		1: "MULTI_ED",
		2: "MULTI_AGENT",
	}
	Signature_SignatureType_value = map[string]int32{
		"ED":          0,
		"MULTI_ED":    1,
		"MULTI_AGENT": 2,
	}
)

func (x Signature_SignatureType) Enum() *Signature_SignatureType {
	p := new(Signature_SignatureType)
	*p = x
	return p
}

func (x Signature_SignatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signature_SignatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[4].Descriptor()
}

func (Signature_SignatureType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[4]
}

func (x Signature_SignatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signature_SignatureType.Descriptor instead.
func (Signature_SignatureType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{28, 0}
}

type AccountSignature_AccountSignatureType int32

const (
	AccountSignature_ED       AccountSignature_AccountSignatureType = 0
	AccountSignature_MULTI_ED AccountSignature_AccountSignatureType = 1
)

// Enum value maps for AccountSignature_AccountSignatureType.
var (
	AccountSignature_AccountSignatureType_name = map[int32]string{
		0: "ED",
		1: "MULTI_ED",
	}
	AccountSignature_AccountSignatureType_value = map[string]int32{
		"ED":       0,
		"MULTI_ED": 1,
	}
)

func (x AccountSignature_AccountSignatureType) Enum() *AccountSignature_AccountSignatureType {
	p := new(AccountSignature_AccountSignatureType)
	*p = x
	return p
}

func (x AccountSignature_AccountSignatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountSignature_AccountSignatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_aptos_type_v1_type_proto_enumTypes[5].Descriptor()
}

func (AccountSignature_AccountSignatureType) Type() protoreflect.EnumType {
	return &file_sf_aptos_type_v1_type_proto_enumTypes[5]
}

func (x AccountSignature_AccountSignatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountSignature_AccountSignatureType.Descriptor instead.
func (AccountSignature_AccountSignatureType) EnumDescriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{32, 0}
}

// Transaction is what a Firehose Block is for Aptos where 1 Transaction == 1 Block.
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   uint64                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version     uint64                      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Info        *TransactionInfo            `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Epoch       uint64                      `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	BlockHeight uint64                      `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Type        Transaction_TransactionType `protobuf:"varint,6,opt,name=type,proto3,enum=sf.aptos.type.v1.Transaction_TransactionType" json:"type,omitempty"`
	// Types that are assignable to TxnData:
	//	*Transaction_BlockMetadataTxn
	//	*Transaction_GenesisTxn
	//	*Transaction_StateCheckpointTxn
	//	*Transaction_UserTxn
	TxnData isTransaction_TxnData `protobuf_oneof:"txn_data"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{0}
}

func (x *Transaction) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetInfo() *TransactionInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Transaction) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Transaction) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *Transaction) GetType() Transaction_TransactionType {
	if x != nil {
		return x.Type
	}
	return Transaction_GENESIS
}

func (m *Transaction) GetTxnData() isTransaction_TxnData {
	if m != nil {
		return m.TxnData
	}
	return nil
}

func (x *Transaction) GetBlockMetadataTxn() *BlockMetadataTransaction {
	if x, ok := x.GetTxnData().(*Transaction_BlockMetadataTxn); ok {
		return x.BlockMetadataTxn
	}
	return nil
}

func (x *Transaction) GetGenesisTxn() *GenesisTransaction {
	if x, ok := x.GetTxnData().(*Transaction_GenesisTxn); ok {
		return x.GenesisTxn
	}
	return nil
}

func (x *Transaction) GetStateCheckpointTxn() *StateCheckpointTransaction {
	if x, ok := x.GetTxnData().(*Transaction_StateCheckpointTxn); ok {
		return x.StateCheckpointTxn
	}
	return nil
}

func (x *Transaction) GetUserTxn() *UserTransaction {
	if x, ok := x.GetTxnData().(*Transaction_UserTxn); ok {
		return x.UserTxn
	}
	return nil
}

type isTransaction_TxnData interface {
	isTransaction_TxnData()
}

type Transaction_BlockMetadataTxn struct {
	BlockMetadataTxn *BlockMetadataTransaction `protobuf:"bytes,7,opt,name=block_metadata_txn,json=blockMetadataTxn,proto3,oneof"`
}

type Transaction_GenesisTxn struct {
	GenesisTxn *GenesisTransaction `protobuf:"bytes,8,opt,name=genesis_txn,json=genesisTxn,proto3,oneof"`
}

type Transaction_StateCheckpointTxn struct {
	StateCheckpointTxn *StateCheckpointTransaction `protobuf:"bytes,9,opt,name=state_checkpoint_txn,json=stateCheckpointTxn,proto3,oneof"`
}

type Transaction_UserTxn struct {
	UserTxn *UserTransaction `protobuf:"bytes,10,opt,name=user_txn,json=userTxn,proto3,oneof"`
}

func (*Transaction_BlockMetadataTxn) isTransaction_TxnData() {}

func (*Transaction_GenesisTxn) isTransaction_TxnData() {}

func (*Transaction_StateCheckpointTxn) isTransaction_TxnData() {}

func (*Transaction_UserTxn) isTransaction_TxnData() {}

type BlockMetadataTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Round                 uint64   `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Events                []*Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	PreviousBlockVotes    []bool   `protobuf:"varint,4,rep,packed,name=previous_block_votes,json=previousBlockVotes,proto3" json:"previous_block_votes,omitempty"`
	Proposer              string   `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	FailedProposerIndices []uint32 `protobuf:"varint,6,rep,packed,name=failed_proposer_indices,json=failedProposerIndices,proto3" json:"failed_proposer_indices,omitempty"`
}

func (x *BlockMetadataTransaction) Reset() {
	*x = BlockMetadataTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetadataTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetadataTransaction) ProtoMessage() {}

func (x *BlockMetadataTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetadataTransaction.ProtoReflect.Descriptor instead.
func (*BlockMetadataTransaction) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{1}
}

func (x *BlockMetadataTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BlockMetadataTransaction) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *BlockMetadataTransaction) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *BlockMetadataTransaction) GetPreviousBlockVotes() []bool {
	if x != nil {
		return x.PreviousBlockVotes
	}
	return nil
}

func (x *BlockMetadataTransaction) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *BlockMetadataTransaction) GetFailedProposerIndices() []uint32 {
	if x != nil {
		return x.FailedProposerIndices
	}
	return nil
}

type GenesisTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *WriteSet `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Events  []*Event  `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GenesisTransaction) Reset() {
	*x = GenesisTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisTransaction) ProtoMessage() {}

func (x *GenesisTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisTransaction.ProtoReflect.Descriptor instead.
func (*GenesisTransaction) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{2}
}

func (x *GenesisTransaction) GetPayload() *WriteSet {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *GenesisTransaction) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type StateCheckpointTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateCheckpointTransaction) Reset() {
	*x = StateCheckpointTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateCheckpointTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateCheckpointTransaction) ProtoMessage() {}

func (x *StateCheckpointTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateCheckpointTransaction.ProtoReflect.Descriptor instead.
func (*StateCheckpointTransaction) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{3}
}

type UserTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *UserTransactionRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Events  []*Event                `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *UserTransaction) Reset() {
	*x = UserTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTransaction) ProtoMessage() {}

func (x *UserTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTransaction.ProtoReflect.Descriptor instead.
func (*UserTransaction) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{4}
}

func (x *UserTransaction) GetRequest() *UserTransactionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *UserTransaction) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            *EventKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SequenceNumber uint64    `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Type           string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Data           string    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{5}
}

func (x *Event) GetKey() *EventKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Event) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                string            `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	StateRootHash       string            `protobuf:"bytes,2,opt,name=state_root_hash,json=stateRootHash,proto3" json:"state_root_hash,omitempty"`
	EventRootHash       string            `protobuf:"bytes,3,opt,name=event_root_hash,json=eventRootHash,proto3" json:"event_root_hash,omitempty"`
	GasUsed             uint64            `protobuf:"varint,4,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Success             bool              `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	VmStatus            string            `protobuf:"bytes,6,opt,name=vm_status,json=vmStatus,proto3" json:"vm_status,omitempty"`
	AccumulatorRootHash string            `protobuf:"bytes,7,opt,name=accumulator_root_hash,json=accumulatorRootHash,proto3" json:"accumulator_root_hash,omitempty"`
	Changes             []*WriteSetChange `protobuf:"bytes,8,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TransactionInfo) GetStateRootHash() string {
	if x != nil {
		return x.StateRootHash
	}
	return ""
}

func (x *TransactionInfo) GetEventRootHash() string {
	if x != nil {
		return x.EventRootHash
	}
	return ""
}

func (x *TransactionInfo) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *TransactionInfo) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransactionInfo) GetVmStatus() string {
	if x != nil {
		return x.VmStatus
	}
	return ""
}

func (x *TransactionInfo) GetAccumulatorRootHash() string {
	if x != nil {
		return x.AccumulatorRootHash
	}
	return ""
}

func (x *TransactionInfo) GetChanges() []*WriteSetChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type EventKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreationNumber uint64 `protobuf:"varint,1,opt,name=creation_number,json=creationNumber,proto3" json:"creation_number,omitempty"`
	AccountAddress string `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
}

func (x *EventKey) Reset() {
	*x = EventKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventKey) ProtoMessage() {}

func (x *EventKey) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventKey.ProtoReflect.Descriptor instead.
func (*EventKey) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{7}
}

func (x *EventKey) GetCreationNumber() uint64 {
	if x != nil {
		return x.CreationNumber
	}
	return 0
}

func (x *EventKey) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

type UserTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender                  string              `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	SequenceNumber          uint64              `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	MaxGasAmount            uint64              `protobuf:"varint,3,opt,name=max_gas_amount,json=maxGasAmount,proto3" json:"max_gas_amount,omitempty"`
	GasUnitPrice            uint64              `protobuf:"varint,4,opt,name=gas_unit_price,json=gasUnitPrice,proto3" json:"gas_unit_price,omitempty"`
	ExpirationTimestampSecs uint64              `protobuf:"varint,5,opt,name=expiration_timestamp_secs,json=expirationTimestampSecs,proto3" json:"expiration_timestamp_secs,omitempty"`
	Payload                 *TransactionPayload `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	Signature               *Signature          `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *UserTransactionRequest) Reset() {
	*x = UserTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTransactionRequest) ProtoMessage() {}

func (x *UserTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTransactionRequest.ProtoReflect.Descriptor instead.
func (*UserTransactionRequest) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{8}
}

func (x *UserTransactionRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *UserTransactionRequest) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *UserTransactionRequest) GetMaxGasAmount() uint64 {
	if x != nil {
		return x.MaxGasAmount
	}
	return 0
}

func (x *UserTransactionRequest) GetGasUnitPrice() uint64 {
	if x != nil {
		return x.GasUnitPrice
	}
	return 0
}

func (x *UserTransactionRequest) GetExpirationTimestampSecs() uint64 {
	if x != nil {
		return x.ExpirationTimestampSecs
	}
	return 0
}

func (x *UserTransactionRequest) GetPayload() *TransactionPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *UserTransactionRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type WriteSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteSetType WriteSet_WriteSetType `protobuf:"varint,1,opt,name=write_set_type,json=writeSetType,proto3,enum=sf.aptos.type.v1.WriteSet_WriteSetType" json:"write_set_type,omitempty"`
	// Types that are assignable to WriteSet:
	//	*WriteSet_ScriptWriteSet
	//	*WriteSet_DirectWriteSet
	WriteSet isWriteSet_WriteSet `protobuf_oneof:"write_set"`
}

func (x *WriteSet) Reset() {
	*x = WriteSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSet) ProtoMessage() {}

func (x *WriteSet) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSet.ProtoReflect.Descriptor instead.
func (*WriteSet) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{9}
}

func (x *WriteSet) GetWriteSetType() WriteSet_WriteSetType {
	if x != nil {
		return x.WriteSetType
	}
	return WriteSet_SCRIPT_WRITE_SET
}

func (m *WriteSet) GetWriteSet() isWriteSet_WriteSet {
	if m != nil {
		return m.WriteSet
	}
	return nil
}

func (x *WriteSet) GetScriptWriteSet() *ScriptWriteSet {
	if x, ok := x.GetWriteSet().(*WriteSet_ScriptWriteSet); ok {
		return x.ScriptWriteSet
	}
	return nil
}

func (x *WriteSet) GetDirectWriteSet() *DirectWriteSet {
	if x, ok := x.GetWriteSet().(*WriteSet_DirectWriteSet); ok {
		return x.DirectWriteSet
	}
	return nil
}

type isWriteSet_WriteSet interface {
	isWriteSet_WriteSet()
}

type WriteSet_ScriptWriteSet struct {
	ScriptWriteSet *ScriptWriteSet `protobuf:"bytes,2,opt,name=script_write_set,json=scriptWriteSet,proto3,oneof"`
}

type WriteSet_DirectWriteSet struct {
	DirectWriteSet *DirectWriteSet `protobuf:"bytes,3,opt,name=direct_write_set,json=directWriteSet,proto3,oneof"`
}

func (*WriteSet_ScriptWriteSet) isWriteSet_WriteSet() {}

func (*WriteSet_DirectWriteSet) isWriteSet_WriteSet() {}

type ScriptWriteSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecuteAs string         `protobuf:"bytes,1,opt,name=execute_as,json=executeAs,proto3" json:"execute_as,omitempty"`
	Script    *ScriptPayload `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *ScriptWriteSet) Reset() {
	*x = ScriptWriteSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptWriteSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptWriteSet) ProtoMessage() {}

func (x *ScriptWriteSet) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptWriteSet.ProtoReflect.Descriptor instead.
func (*ScriptWriteSet) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{10}
}

func (x *ScriptWriteSet) GetExecuteAs() string {
	if x != nil {
		return x.ExecuteAs
	}
	return ""
}

func (x *ScriptWriteSet) GetScript() *ScriptPayload {
	if x != nil {
		return x.Script
	}
	return nil
}

type DirectWriteSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteSetChange []*WriteSetChange `protobuf:"bytes,1,rep,name=write_set_change,json=writeSetChange,proto3" json:"write_set_change,omitempty"`
	Events         []*Event          `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *DirectWriteSet) Reset() {
	*x = DirectWriteSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectWriteSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectWriteSet) ProtoMessage() {}

func (x *DirectWriteSet) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectWriteSet.ProtoReflect.Descriptor instead.
func (*DirectWriteSet) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{11}
}

func (x *DirectWriteSet) GetWriteSetChange() []*WriteSetChange {
	if x != nil {
		return x.WriteSetChange
	}
	return nil
}

func (x *DirectWriteSet) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type WriteSetChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type WriteSetChange_WriteSetChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=sf.aptos.type.v1.WriteSetChange_WriteSetChangeType" json:"type,omitempty"`
	// Types that are assignable to Change:
	//	*WriteSetChange_DeleteModule
	//	*WriteSetChange_DeleteResource
	//	*WriteSetChange_DeleteTableItem
	//	*WriteSetChange_WriteModule
	//	*WriteSetChange_WriteResource
	//	*WriteSetChange_WriteTableItem
	Change isWriteSetChange_Change `protobuf_oneof:"change"`
}

func (x *WriteSetChange) Reset() {
	*x = WriteSetChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSetChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSetChange) ProtoMessage() {}

func (x *WriteSetChange) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSetChange.ProtoReflect.Descriptor instead.
func (*WriteSetChange) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{12}
}

func (x *WriteSetChange) GetType() WriteSetChange_WriteSetChangeType {
	if x != nil {
		return x.Type
	}
	return WriteSetChange_DELETE_MODULE
}

func (m *WriteSetChange) GetChange() isWriteSetChange_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *WriteSetChange) GetDeleteModule() *DeleteModule {
	if x, ok := x.GetChange().(*WriteSetChange_DeleteModule); ok {
		return x.DeleteModule
	}
	return nil
}

func (x *WriteSetChange) GetDeleteResource() *DeleteResource {
	if x, ok := x.GetChange().(*WriteSetChange_DeleteResource); ok {
		return x.DeleteResource
	}
	return nil
}

func (x *WriteSetChange) GetDeleteTableItem() *DeleteTableItem {
	if x, ok := x.GetChange().(*WriteSetChange_DeleteTableItem); ok {
		return x.DeleteTableItem
	}
	return nil
}

func (x *WriteSetChange) GetWriteModule() *WriteModule {
	if x, ok := x.GetChange().(*WriteSetChange_WriteModule); ok {
		return x.WriteModule
	}
	return nil
}

func (x *WriteSetChange) GetWriteResource() *WriteResource {
	if x, ok := x.GetChange().(*WriteSetChange_WriteResource); ok {
		return x.WriteResource
	}
	return nil
}

func (x *WriteSetChange) GetWriteTableItem() *WriteTableItem {
	if x, ok := x.GetChange().(*WriteSetChange_WriteTableItem); ok {
		return x.WriteTableItem
	}
	return nil
}

type isWriteSetChange_Change interface {
	isWriteSetChange_Change()
}

type WriteSetChange_DeleteModule struct {
	DeleteModule *DeleteModule `protobuf:"bytes,2,opt,name=delete_module,json=deleteModule,proto3,oneof"`
}

type WriteSetChange_DeleteResource struct {
	DeleteResource *DeleteResource `protobuf:"bytes,3,opt,name=delete_resource,json=deleteResource,proto3,oneof"`
}

type WriteSetChange_DeleteTableItem struct {
	DeleteTableItem *DeleteTableItem `protobuf:"bytes,4,opt,name=delete_table_item,json=deleteTableItem,proto3,oneof"`
}

type WriteSetChange_WriteModule struct {
	WriteModule *WriteModule `protobuf:"bytes,5,opt,name=write_module,json=writeModule,proto3,oneof"`
}

type WriteSetChange_WriteResource struct {
	WriteResource *WriteResource `protobuf:"bytes,6,opt,name=write_resource,json=writeResource,proto3,oneof"`
}

type WriteSetChange_WriteTableItem struct {
	WriteTableItem *WriteTableItem `protobuf:"bytes,7,opt,name=write_table_item,json=writeTableItem,proto3,oneof"`
}

func (*WriteSetChange_DeleteModule) isWriteSetChange_Change() {}

func (*WriteSetChange_DeleteResource) isWriteSetChange_Change() {}

func (*WriteSetChange_DeleteTableItem) isWriteSetChange_Change() {}

func (*WriteSetChange_WriteModule) isWriteSetChange_Change() {}

func (*WriteSetChange_WriteResource) isWriteSetChange_Change() {}

func (*WriteSetChange_WriteTableItem) isWriteSetChange_Change() {}

type DeleteModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StateKeyHash string        `protobuf:"bytes,2,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Module       *MoveModuleId `protobuf:"bytes,3,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *DeleteModule) Reset() {
	*x = DeleteModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteModule) ProtoMessage() {}

func (x *DeleteModule) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteModule.ProtoReflect.Descriptor instead.
func (*DeleteModule) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteModule) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeleteModule) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *DeleteModule) GetModule() *MoveModuleId {
	if x != nil {
		return x.Module
	}
	return nil
}

type DeleteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string         `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StateKeyHash string         `protobuf:"bytes,2,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Resource     *MoveStructTag `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *DeleteResource) Reset() {
	*x = DeleteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResource) ProtoMessage() {}

func (x *DeleteResource) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResource.ProtoReflect.Descriptor instead.
func (*DeleteResource) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteResource) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeleteResource) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *DeleteResource) GetResource() *MoveStructTag {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteTableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateKeyHash string `protobuf:"bytes,1,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Handle       string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Key          string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteTableItem) Reset() {
	*x = DeleteTableItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableItem) ProtoMessage() {}

func (x *DeleteTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableItem.ProtoReflect.Descriptor instead.
func (*DeleteTableItem) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTableItem) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *DeleteTableItem) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *DeleteTableItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WriteModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StateKeyHash string `protobuf:"bytes,2,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Data         string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteModule) Reset() {
	*x = WriteModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteModule) ProtoMessage() {}

func (x *WriteModule) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteModule.ProtoReflect.Descriptor instead.
func (*WriteModule) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{16}
}

func (x *WriteModule) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WriteModule) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *WriteModule) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type WriteResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StateKeyHash string        `protobuf:"bytes,2,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Data         *MoveResource `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteResource) Reset() {
	*x = WriteResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResource) ProtoMessage() {}

func (x *WriteResource) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResource.ProtoReflect.Descriptor instead.
func (*WriteResource) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{17}
}

func (x *WriteResource) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WriteResource) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *WriteResource) GetData() *MoveResource {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteTableItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateKeyHash string `protobuf:"bytes,1,opt,name=state_key_hash,json=stateKeyHash,proto3" json:"state_key_hash,omitempty"`
	Handle       string `protobuf:"bytes,2,opt,name=handle,proto3" json:"handle,omitempty"`
	Key          string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value        string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteTableItem) Reset() {
	*x = WriteTableItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteTableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteTableItem) ProtoMessage() {}

func (x *WriteTableItem) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteTableItem.ProtoReflect.Descriptor instead.
func (*WriteTableItem) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{18}
}

func (x *WriteTableItem) GetStateKeyHash() string {
	if x != nil {
		return x.StateKeyHash
	}
	return ""
}

func (x *WriteTableItem) GetHandle() string {
	if x != nil {
		return x.Handle
	}
	return ""
}

func (x *WriteTableItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WriteTableItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TransactionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TransactionPayload_PayloadType `protobuf:"varint,1,opt,name=type,proto3,enum=sf.aptos.type.v1.TransactionPayload_PayloadType" json:"type,omitempty"`
	// Types that are assignable to Payload:
	//	*TransactionPayload_ScriptFunctionPayload
	//	*TransactionPayload_ScriptPayload
	//	*TransactionPayload_ModuleBundlePayload
	//	*TransactionPayload_WriteSetPayload
	Payload isTransactionPayload_Payload `protobuf_oneof:"payload"`
}

func (x *TransactionPayload) Reset() {
	*x = TransactionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPayload) ProtoMessage() {}

func (x *TransactionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPayload.ProtoReflect.Descriptor instead.
func (*TransactionPayload) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{19}
}

func (x *TransactionPayload) GetType() TransactionPayload_PayloadType {
	if x != nil {
		return x.Type
	}
	return TransactionPayload_SCRIPT_FUNCTION_PAYLOAD
}

func (m *TransactionPayload) GetPayload() isTransactionPayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *TransactionPayload) GetScriptFunctionPayload() *ScriptFunctionPayload {
	if x, ok := x.GetPayload().(*TransactionPayload_ScriptFunctionPayload); ok {
		return x.ScriptFunctionPayload
	}
	return nil
}

func (x *TransactionPayload) GetScriptPayload() *ScriptPayload {
	if x, ok := x.GetPayload().(*TransactionPayload_ScriptPayload); ok {
		return x.ScriptPayload
	}
	return nil
}

func (x *TransactionPayload) GetModuleBundlePayload() *ModuleBundlePayload {
	if x, ok := x.GetPayload().(*TransactionPayload_ModuleBundlePayload); ok {
		return x.ModuleBundlePayload
	}
	return nil
}

func (x *TransactionPayload) GetWriteSetPayload() *WriteSetPayload {
	if x, ok := x.GetPayload().(*TransactionPayload_WriteSetPayload); ok {
		return x.WriteSetPayload
	}
	return nil
}

type isTransactionPayload_Payload interface {
	isTransactionPayload_Payload()
}

type TransactionPayload_ScriptFunctionPayload struct {
	ScriptFunctionPayload *ScriptFunctionPayload `protobuf:"bytes,2,opt,name=script_function_payload,json=scriptFunctionPayload,proto3,oneof"`
}

type TransactionPayload_ScriptPayload struct {
	ScriptPayload *ScriptPayload `protobuf:"bytes,3,opt,name=script_payload,json=scriptPayload,proto3,oneof"`
}

type TransactionPayload_ModuleBundlePayload struct {
	ModuleBundlePayload *ModuleBundlePayload `protobuf:"bytes,4,opt,name=module_bundle_payload,json=moduleBundlePayload,proto3,oneof"`
}

type TransactionPayload_WriteSetPayload struct {
	WriteSetPayload *WriteSetPayload `protobuf:"bytes,5,opt,name=write_set_payload,json=writeSetPayload,proto3,oneof"`
}

func (*TransactionPayload_ScriptFunctionPayload) isTransactionPayload_Payload() {}

func (*TransactionPayload_ScriptPayload) isTransactionPayload_Payload() {}

func (*TransactionPayload_ModuleBundlePayload) isTransactionPayload_Payload() {}

func (*TransactionPayload_WriteSetPayload) isTransactionPayload_Payload() {}

type ScriptFunctionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function      *ScriptFunctionId `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	TypeArguments []string          `protobuf:"bytes,2,rep,name=type_arguments,json=typeArguments,proto3" json:"type_arguments,omitempty"`
	Arguments     []string          `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *ScriptFunctionPayload) Reset() {
	*x = ScriptFunctionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptFunctionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptFunctionPayload) ProtoMessage() {}

func (x *ScriptFunctionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptFunctionPayload.ProtoReflect.Descriptor instead.
func (*ScriptFunctionPayload) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{20}
}

func (x *ScriptFunctionPayload) GetFunction() *ScriptFunctionId {
	if x != nil {
		return x.Function
	}
	return nil
}

func (x *ScriptFunctionPayload) GetTypeArguments() []string {
	if x != nil {
		return x.TypeArguments
	}
	return nil
}

func (x *ScriptFunctionPayload) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type ScriptPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	TypeArguments []string `protobuf:"bytes,2,rep,name=type_arguments,json=typeArguments,proto3" json:"type_arguments,omitempty"`
	Arguments     []string `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *ScriptPayload) Reset() {
	*x = ScriptPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptPayload) ProtoMessage() {}

func (x *ScriptPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptPayload.ProtoReflect.Descriptor instead.
func (*ScriptPayload) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{21}
}

func (x *ScriptPayload) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ScriptPayload) GetTypeArguments() []string {
	if x != nil {
		return x.TypeArguments
	}
	return nil
}

func (x *ScriptPayload) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type ModuleBundlePayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modules []string `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *ModuleBundlePayload) Reset() {
	*x = ModuleBundlePayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleBundlePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleBundlePayload) ProtoMessage() {}

func (x *ModuleBundlePayload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleBundlePayload.ProtoReflect.Descriptor instead.
func (*ModuleBundlePayload) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{22}
}

func (x *ModuleBundlePayload) GetModules() []string {
	if x != nil {
		return x.Modules
	}
	return nil
}

type WriteSetPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriteSet *WriteSet `protobuf:"bytes,1,opt,name=write_set,json=writeSet,proto3" json:"write_set,omitempty"`
}

func (x *WriteSetPayload) Reset() {
	*x = WriteSetPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSetPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSetPayload) ProtoMessage() {}

func (x *WriteSetPayload) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSetPayload.ProtoReflect.Descriptor instead.
func (*WriteSetPayload) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{23}
}

func (x *WriteSetPayload) GetWriteSet() *WriteSet {
	if x != nil {
		return x.WriteSet
	}
	return nil
}

type ScriptFunctionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module *MoveModuleId `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Name   string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ScriptFunctionId) Reset() {
	*x = ScriptFunctionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptFunctionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptFunctionId) ProtoMessage() {}

func (x *ScriptFunctionId) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptFunctionId.ProtoReflect.Descriptor instead.
func (*ScriptFunctionId) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{24}
}

func (x *ScriptFunctionId) GetModule() *MoveModuleId {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *ScriptFunctionId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MoveResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *MoveStructTag `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data string         `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MoveResource) Reset() {
	*x = MoveResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResource) ProtoMessage() {}

func (x *MoveResource) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResource.ProtoReflect.Descriptor instead.
func (*MoveResource) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{25}
}

func (x *MoveResource) GetType() *MoveStructTag {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *MoveResource) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type MoveModuleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MoveModuleId) Reset() {
	*x = MoveModuleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveModuleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveModuleId) ProtoMessage() {}

func (x *MoveModuleId) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveModuleId.ProtoReflect.Descriptor instead.
func (*MoveModuleId) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{26}
}

func (x *MoveModuleId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MoveModuleId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MoveStructTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address           string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Module            string   `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Name              string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GenericTypeParams []string `protobuf:"bytes,4,rep,name=generic_type_params,json=genericTypeParams,proto3" json:"generic_type_params,omitempty"`
}

func (x *MoveStructTag) Reset() {
	*x = MoveStructTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveStructTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveStructTag) ProtoMessage() {}

func (x *MoveStructTag) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveStructTag.ProtoReflect.Descriptor instead.
func (*MoveStructTag) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{27}
}

func (x *MoveStructTag) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MoveStructTag) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *MoveStructTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MoveStructTag) GetGenericTypeParams() []string {
	if x != nil {
		return x.GenericTypeParams
	}
	return nil
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Signature_SignatureType `protobuf:"varint,1,opt,name=type,proto3,enum=sf.aptos.type.v1.Signature_SignatureType" json:"type,omitempty"`
	// Types that are assignable to Signature:
	//	*Signature_Ed
	//	*Signature_MultiEd
	//	*Signature_MultiAgent
	Signature isSignature_Signature `protobuf_oneof:"signature"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{28}
}

func (x *Signature) GetType() Signature_SignatureType {
	if x != nil {
		return x.Type
	}
	return Signature_ED
}

func (m *Signature) GetSignature() isSignature_Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (x *Signature) GetEd() *Ed25519Signature {
	if x, ok := x.GetSignature().(*Signature_Ed); ok {
		return x.Ed
	}
	return nil
}

func (x *Signature) GetMultiEd() *MultiEd25519Signature {
	if x, ok := x.GetSignature().(*Signature_MultiEd); ok {
		return x.MultiEd
	}
	return nil
}

func (x *Signature) GetMultiAgent() *MultiAgentSignature {
	if x, ok := x.GetSignature().(*Signature_MultiAgent); ok {
		return x.MultiAgent
	}
	return nil
}

type isSignature_Signature interface {
	isSignature_Signature()
}

type Signature_Ed struct {
	Ed *Ed25519Signature `protobuf:"bytes,2,opt,name=ed,proto3,oneof"`
}

type Signature_MultiEd struct {
	MultiEd *MultiEd25519Signature `protobuf:"bytes,3,opt,name=multi_ed,json=multiEd,proto3,oneof"`
}

type Signature_MultiAgent struct {
	MultiAgent *MultiAgentSignature `protobuf:"bytes,4,opt,name=multi_agent,json=multiAgent,proto3,oneof"`
}

func (*Signature_Ed) isSignature_Signature() {}

func (*Signature_MultiEd) isSignature_Signature() {}

func (*Signature_MultiAgent) isSignature_Signature() {}

type Ed25519Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Ed25519Signature) Reset() {
	*x = Ed25519Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ed25519Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ed25519Signature) ProtoMessage() {}

func (x *Ed25519Signature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ed25519Signature.ProtoReflect.Descriptor instead.
func (*Ed25519Signature) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{29}
}

func (x *Ed25519Signature) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Ed25519Signature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type MultiEd25519Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys []string `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	Signatures []string `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Threshold  uint32   `protobuf:"varint,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Bitmap     string   `protobuf:"bytes,4,opt,name=bitmap,proto3" json:"bitmap,omitempty"`
}

func (x *MultiEd25519Signature) Reset() {
	*x = MultiEd25519Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiEd25519Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiEd25519Signature) ProtoMessage() {}

func (x *MultiEd25519Signature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiEd25519Signature.ProtoReflect.Descriptor instead.
func (*MultiEd25519Signature) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{30}
}

func (x *MultiEd25519Signature) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *MultiEd25519Signature) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *MultiEd25519Signature) GetThreshold() uint32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *MultiEd25519Signature) GetBitmap() string {
	if x != nil {
		return x.Bitmap
	}
	return ""
}

type MultiAgentSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender                   *AccountSignature   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	SecondarySignerAddresses []string            `protobuf:"bytes,2,rep,name=secondary_signer_addresses,json=secondarySignerAddresses,proto3" json:"secondary_signer_addresses,omitempty"`
	SecondarySigners         []*AccountSignature `protobuf:"bytes,3,rep,name=secondary_signers,json=secondarySigners,proto3" json:"secondary_signers,omitempty"`
}

func (x *MultiAgentSignature) Reset() {
	*x = MultiAgentSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiAgentSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiAgentSignature) ProtoMessage() {}

func (x *MultiAgentSignature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiAgentSignature.ProtoReflect.Descriptor instead.
func (*MultiAgentSignature) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{31}
}

func (x *MultiAgentSignature) GetSender() *AccountSignature {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MultiAgentSignature) GetSecondarySignerAddresses() []string {
	if x != nil {
		return x.SecondarySignerAddresses
	}
	return nil
}

func (x *MultiAgentSignature) GetSecondarySigners() []*AccountSignature {
	if x != nil {
		return x.SecondarySigners
	}
	return nil
}

type AccountSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type AccountSignature_AccountSignatureType `protobuf:"varint,1,opt,name=type,proto3,enum=sf.aptos.type.v1.AccountSignature_AccountSignatureType" json:"type,omitempty"`
	// Types that are assignable to Signature:
	//	*AccountSignature_Ed
	//	*AccountSignature_MultiEd
	Signature isAccountSignature_Signature `protobuf_oneof:"signature"`
}

func (x *AccountSignature) Reset() {
	*x = AccountSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_aptos_type_v1_type_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSignature) ProtoMessage() {}

func (x *AccountSignature) ProtoReflect() protoreflect.Message {
	mi := &file_sf_aptos_type_v1_type_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSignature.ProtoReflect.Descriptor instead.
func (*AccountSignature) Descriptor() ([]byte, []int) {
	return file_sf_aptos_type_v1_type_proto_rawDescGZIP(), []int{32}
}

func (x *AccountSignature) GetType() AccountSignature_AccountSignatureType {
	if x != nil {
		return x.Type
	}
	return AccountSignature_ED
}

func (m *AccountSignature) GetSignature() isAccountSignature_Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (x *AccountSignature) GetEd() *Ed25519Signature {
	if x, ok := x.GetSignature().(*AccountSignature_Ed); ok {
		return x.Ed
	}
	return nil
}

func (x *AccountSignature) GetMultiEd() *MultiEd25519Signature {
	if x, ok := x.GetSignature().(*AccountSignature_MultiEd); ok {
		return x.MultiEd
	}
	return nil
}

type isAccountSignature_Signature interface {
	isAccountSignature_Signature()
}

type AccountSignature_Ed struct {
	Ed *Ed25519Signature `protobuf:"bytes,2,opt,name=ed,proto3,oneof"`
}

type AccountSignature_MultiEd struct {
	MultiEd *MultiEd25519Signature `protobuf:"bytes,3,opt,name=multi_ed,json=multiEd,proto3,oneof"`
}

func (*AccountSignature_Ed) isAccountSignature_Signature() {}

func (*AccountSignature_MultiEd) isAccountSignature_Signature() {}

var File_sf_aptos_type_v1_type_proto protoreflect.FileDescriptor

var file_sf_aptos_type_v1_type_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x66, 0x2f, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73,
	0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x22,
	0x9f, 0x05, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x78, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x78, 0x6e, 0x12, 0x47, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x66,
	0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x78, 0x6e, 0x12,
	0x60, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x78,
	0x6e, 0x12, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x54, 0x78,
	0x6e, 0x22, 0x52, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x53, 0x49, 0x53, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x74, 0x78, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xf7, 0x01, 0x0a, 0x18, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x15, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x12, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x66,
	0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x86, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x6f,
	0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x5c, 0x0a, 0x08, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xdc, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x55,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x53, 0x65, 0x63, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xbe, 0x02, 0x0a, 0x08, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0e,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x22, 0x3a, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x45,
	0x54, 0x10, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x22, 0x68, 0x0a, 0x0e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41,
	0x73, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x4a, 0x0a,
	0x10, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0e, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x66, 0x2e, 0x61,
	0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb6, 0x05, 0x0a, 0x0e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x47, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x73, 0x66,
	0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4b, 0x0a,
	0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x42, 0x0a, 0x0c, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x77, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x05, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x61, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xb2, 0x04, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x44, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x61, 0x0a,
	0x17, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x48, 0x0a, 0x0e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70,
	0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x5b, 0x0a, 0x15, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x66, 0x2e, 0x61,
	0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x13, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4f, 0x0a, 0x11, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x70, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f,
	0x41, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x50,
	0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4f, 0x44, 0x55,
	0x4c, 0x45, 0x5f, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41,
	0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x54,
	0x5f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x3e, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x0d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2f,
	0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0x4a, 0x0a, 0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x52, 0x08, 0x77, 0x72, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x10, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x0c, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x66, 0x2e, 0x61,
	0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd5, 0x02, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x02, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x02, 0x65, 0x64, 0x12, 0x44, 0x0a,
	0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x45, 0x64, 0x12, 0x48, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70,
	0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06,
	0x0a, 0x02, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x41, 0x47,
	0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0x4f, 0x0a, 0x10, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x64, 0x32,
	0x35, 0x35, 0x31, 0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69,
	0x74, 0x6d, 0x61, 0x70, 0x22, 0xe0, 0x01, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73,
	0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x66, 0x2e,
	0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x02, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x02, 0x65, 0x64, 0x12,
	0x44, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x73, 0x66, 0x2e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31,
	0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x45, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x45,
	0x44, 0x10, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x66, 0x69, 0x72,
	0x65, 0x68, 0x6f, 0x73, 0x65, 0x2d, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_aptos_type_v1_type_proto_rawDescOnce sync.Once
	file_sf_aptos_type_v1_type_proto_rawDescData = file_sf_aptos_type_v1_type_proto_rawDesc
)

func file_sf_aptos_type_v1_type_proto_rawDescGZIP() []byte {
	file_sf_aptos_type_v1_type_proto_rawDescOnce.Do(func() {
		file_sf_aptos_type_v1_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_aptos_type_v1_type_proto_rawDescData)
	})
	return file_sf_aptos_type_v1_type_proto_rawDescData
}

var file_sf_aptos_type_v1_type_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_sf_aptos_type_v1_type_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_sf_aptos_type_v1_type_proto_goTypes = []interface{}{
	(Transaction_TransactionType)(0),           // 0: sf.aptos.type.v1.Transaction.TransactionType
	(WriteSet_WriteSetType)(0),                 // 1: sf.aptos.type.v1.WriteSet.WriteSetType
	(WriteSetChange_WriteSetChangeType)(0),     // 2: sf.aptos.type.v1.WriteSetChange.WriteSetChangeType
	(TransactionPayload_PayloadType)(0),        // 3: sf.aptos.type.v1.TransactionPayload.PayloadType
	(Signature_SignatureType)(0),               // 4: sf.aptos.type.v1.Signature.SignatureType
	(AccountSignature_AccountSignatureType)(0), // 5: sf.aptos.type.v1.AccountSignature.AccountSignatureType
	(*Transaction)(nil),                        // 6: sf.aptos.type.v1.Transaction
	(*BlockMetadataTransaction)(nil),           // 7: sf.aptos.type.v1.BlockMetadataTransaction
	(*GenesisTransaction)(nil),                 // 8: sf.aptos.type.v1.GenesisTransaction
	(*StateCheckpointTransaction)(nil),         // 9: sf.aptos.type.v1.StateCheckpointTransaction
	(*UserTransaction)(nil),                    // 10: sf.aptos.type.v1.UserTransaction
	(*Event)(nil),                              // 11: sf.aptos.type.v1.Event
	(*TransactionInfo)(nil),                    // 12: sf.aptos.type.v1.TransactionInfo
	(*EventKey)(nil),                           // 13: sf.aptos.type.v1.EventKey
	(*UserTransactionRequest)(nil),             // 14: sf.aptos.type.v1.UserTransactionRequest
	(*WriteSet)(nil),                           // 15: sf.aptos.type.v1.WriteSet
	(*ScriptWriteSet)(nil),                     // 16: sf.aptos.type.v1.ScriptWriteSet
	(*DirectWriteSet)(nil),                     // 17: sf.aptos.type.v1.DirectWriteSet
	(*WriteSetChange)(nil),                     // 18: sf.aptos.type.v1.WriteSetChange
	(*DeleteModule)(nil),                       // 19: sf.aptos.type.v1.DeleteModule
	(*DeleteResource)(nil),                     // 20: sf.aptos.type.v1.DeleteResource
	(*DeleteTableItem)(nil),                    // 21: sf.aptos.type.v1.DeleteTableItem
	(*WriteModule)(nil),                        // 22: sf.aptos.type.v1.WriteModule
	(*WriteResource)(nil),                      // 23: sf.aptos.type.v1.WriteResource
	(*WriteTableItem)(nil),                     // 24: sf.aptos.type.v1.WriteTableItem
	(*TransactionPayload)(nil),                 // 25: sf.aptos.type.v1.TransactionPayload
	(*ScriptFunctionPayload)(nil),              // 26: sf.aptos.type.v1.ScriptFunctionPayload
	(*ScriptPayload)(nil),                      // 27: sf.aptos.type.v1.ScriptPayload
	(*ModuleBundlePayload)(nil),                // 28: sf.aptos.type.v1.ModuleBundlePayload
	(*WriteSetPayload)(nil),                    // 29: sf.aptos.type.v1.WriteSetPayload
	(*ScriptFunctionId)(nil),                   // 30: sf.aptos.type.v1.ScriptFunctionId
	(*MoveResource)(nil),                       // 31: sf.aptos.type.v1.MoveResource
	(*MoveModuleId)(nil),                       // 32: sf.aptos.type.v1.MoveModuleId
	(*MoveStructTag)(nil),                      // 33: sf.aptos.type.v1.MoveStructTag
	(*Signature)(nil),                          // 34: sf.aptos.type.v1.Signature
	(*Ed25519Signature)(nil),                   // 35: sf.aptos.type.v1.Ed25519Signature
	(*MultiEd25519Signature)(nil),              // 36: sf.aptos.type.v1.MultiEd25519Signature
	(*MultiAgentSignature)(nil),                // 37: sf.aptos.type.v1.MultiAgentSignature
	(*AccountSignature)(nil),                   // 38: sf.aptos.type.v1.AccountSignature
}
var file_sf_aptos_type_v1_type_proto_depIdxs = []int32{
	12, // 0: sf.aptos.type.v1.Transaction.info:type_name -> sf.aptos.type.v1.TransactionInfo
	0,  // 1: sf.aptos.type.v1.Transaction.type:type_name -> sf.aptos.type.v1.Transaction.TransactionType
	7,  // 2: sf.aptos.type.v1.Transaction.block_metadata_txn:type_name -> sf.aptos.type.v1.BlockMetadataTransaction
	8,  // 3: sf.aptos.type.v1.Transaction.genesis_txn:type_name -> sf.aptos.type.v1.GenesisTransaction
	9,  // 4: sf.aptos.type.v1.Transaction.state_checkpoint_txn:type_name -> sf.aptos.type.v1.StateCheckpointTransaction
	10, // 5: sf.aptos.type.v1.Transaction.user_txn:type_name -> sf.aptos.type.v1.UserTransaction
	11, // 6: sf.aptos.type.v1.BlockMetadataTransaction.events:type_name -> sf.aptos.type.v1.Event
	15, // 7: sf.aptos.type.v1.GenesisTransaction.payload:type_name -> sf.aptos.type.v1.WriteSet
	11, // 8: sf.aptos.type.v1.GenesisTransaction.events:type_name -> sf.aptos.type.v1.Event
	14, // 9: sf.aptos.type.v1.UserTransaction.request:type_name -> sf.aptos.type.v1.UserTransactionRequest
	11, // 10: sf.aptos.type.v1.UserTransaction.events:type_name -> sf.aptos.type.v1.Event
	13, // 11: sf.aptos.type.v1.Event.key:type_name -> sf.aptos.type.v1.EventKey
	18, // 12: sf.aptos.type.v1.TransactionInfo.changes:type_name -> sf.aptos.type.v1.WriteSetChange
	25, // 13: sf.aptos.type.v1.UserTransactionRequest.payload:type_name -> sf.aptos.type.v1.TransactionPayload
	34, // 14: sf.aptos.type.v1.UserTransactionRequest.signature:type_name -> sf.aptos.type.v1.Signature
	1,  // 15: sf.aptos.type.v1.WriteSet.write_set_type:type_name -> sf.aptos.type.v1.WriteSet.WriteSetType
	16, // 16: sf.aptos.type.v1.WriteSet.script_write_set:type_name -> sf.aptos.type.v1.ScriptWriteSet
	17, // 17: sf.aptos.type.v1.WriteSet.direct_write_set:type_name -> sf.aptos.type.v1.DirectWriteSet
	27, // 18: sf.aptos.type.v1.ScriptWriteSet.script:type_name -> sf.aptos.type.v1.ScriptPayload
	18, // 19: sf.aptos.type.v1.DirectWriteSet.write_set_change:type_name -> sf.aptos.type.v1.WriteSetChange
	11, // 20: sf.aptos.type.v1.DirectWriteSet.events:type_name -> sf.aptos.type.v1.Event
	2,  // 21: sf.aptos.type.v1.WriteSetChange.type:type_name -> sf.aptos.type.v1.WriteSetChange.WriteSetChangeType
	19, // 22: sf.aptos.type.v1.WriteSetChange.delete_module:type_name -> sf.aptos.type.v1.DeleteModule
	20, // 23: sf.aptos.type.v1.WriteSetChange.delete_resource:type_name -> sf.aptos.type.v1.DeleteResource
	21, // 24: sf.aptos.type.v1.WriteSetChange.delete_table_item:type_name -> sf.aptos.type.v1.DeleteTableItem
	22, // 25: sf.aptos.type.v1.WriteSetChange.write_module:type_name -> sf.aptos.type.v1.WriteModule
	23, // 26: sf.aptos.type.v1.WriteSetChange.write_resource:type_name -> sf.aptos.type.v1.WriteResource
	24, // 27: sf.aptos.type.v1.WriteSetChange.write_table_item:type_name -> sf.aptos.type.v1.WriteTableItem
	32, // 28: sf.aptos.type.v1.DeleteModule.module:type_name -> sf.aptos.type.v1.MoveModuleId
	33, // 29: sf.aptos.type.v1.DeleteResource.resource:type_name -> sf.aptos.type.v1.MoveStructTag
	31, // 30: sf.aptos.type.v1.WriteResource.data:type_name -> sf.aptos.type.v1.MoveResource
	3,  // 31: sf.aptos.type.v1.TransactionPayload.type:type_name -> sf.aptos.type.v1.TransactionPayload.PayloadType
	26, // 32: sf.aptos.type.v1.TransactionPayload.script_function_payload:type_name -> sf.aptos.type.v1.ScriptFunctionPayload
	27, // 33: sf.aptos.type.v1.TransactionPayload.script_payload:type_name -> sf.aptos.type.v1.ScriptPayload
	28, // 34: sf.aptos.type.v1.TransactionPayload.module_bundle_payload:type_name -> sf.aptos.type.v1.ModuleBundlePayload
	29, // 35: sf.aptos.type.v1.TransactionPayload.write_set_payload:type_name -> sf.aptos.type.v1.WriteSetPayload
	30, // 36: sf.aptos.type.v1.ScriptFunctionPayload.function:type_name -> sf.aptos.type.v1.ScriptFunctionId
	15, // 37: sf.aptos.type.v1.WriteSetPayload.write_set:type_name -> sf.aptos.type.v1.WriteSet
	32, // 38: sf.aptos.type.v1.ScriptFunctionId.module:type_name -> sf.aptos.type.v1.MoveModuleId
	33, // 39: sf.aptos.type.v1.MoveResource.type:type_name -> sf.aptos.type.v1.MoveStructTag
	4,  // 40: sf.aptos.type.v1.Signature.type:type_name -> sf.aptos.type.v1.Signature.SignatureType
	35, // 41: sf.aptos.type.v1.Signature.ed:type_name -> sf.aptos.type.v1.Ed25519Signature
	36, // 42: sf.aptos.type.v1.Signature.multi_ed:type_name -> sf.aptos.type.v1.MultiEd25519Signature
	37, // 43: sf.aptos.type.v1.Signature.multi_agent:type_name -> sf.aptos.type.v1.MultiAgentSignature
	38, // 44: sf.aptos.type.v1.MultiAgentSignature.sender:type_name -> sf.aptos.type.v1.AccountSignature
	38, // 45: sf.aptos.type.v1.MultiAgentSignature.secondary_signers:type_name -> sf.aptos.type.v1.AccountSignature
	5,  // 46: sf.aptos.type.v1.AccountSignature.type:type_name -> sf.aptos.type.v1.AccountSignature.AccountSignatureType
	35, // 47: sf.aptos.type.v1.AccountSignature.ed:type_name -> sf.aptos.type.v1.Ed25519Signature
	36, // 48: sf.aptos.type.v1.AccountSignature.multi_ed:type_name -> sf.aptos.type.v1.MultiEd25519Signature
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_sf_aptos_type_v1_type_proto_init() }
func file_sf_aptos_type_v1_type_proto_init() {
	if File_sf_aptos_type_v1_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_aptos_type_v1_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetadataTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateCheckpointTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptWriteSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectWriteSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSetChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteTableItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptFunctionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleBundlePayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteSetPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptFunctionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveModuleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveStructTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ed25519Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiEd25519Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiAgentSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_aptos_type_v1_type_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Transaction_BlockMetadataTxn)(nil),
		(*Transaction_GenesisTxn)(nil),
		(*Transaction_StateCheckpointTxn)(nil),
		(*Transaction_UserTxn)(nil),
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*WriteSet_ScriptWriteSet)(nil),
		(*WriteSet_DirectWriteSet)(nil),
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*WriteSetChange_DeleteModule)(nil),
		(*WriteSetChange_DeleteResource)(nil),
		(*WriteSetChange_DeleteTableItem)(nil),
		(*WriteSetChange_WriteModule)(nil),
		(*WriteSetChange_WriteResource)(nil),
		(*WriteSetChange_WriteTableItem)(nil),
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*TransactionPayload_ScriptFunctionPayload)(nil),
		(*TransactionPayload_ScriptPayload)(nil),
		(*TransactionPayload_ModuleBundlePayload)(nil),
		(*TransactionPayload_WriteSetPayload)(nil),
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*Signature_Ed)(nil),
		(*Signature_MultiEd)(nil),
		(*Signature_MultiAgent)(nil),
	}
	file_sf_aptos_type_v1_type_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*AccountSignature_Ed)(nil),
		(*AccountSignature_MultiEd)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_aptos_type_v1_type_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_aptos_type_v1_type_proto_goTypes,
		DependencyIndexes: file_sf_aptos_type_v1_type_proto_depIdxs,
		EnumInfos:         file_sf_aptos_type_v1_type_proto_enumTypes,
		MessageInfos:      file_sf_aptos_type_v1_type_proto_msgTypes,
	}.Build()
	File_sf_aptos_type_v1_type_proto = out.File
	file_sf_aptos_type_v1_type_proto_rawDesc = nil
	file_sf_aptos_type_v1_type_proto_goTypes = nil
	file_sf_aptos_type_v1_type_proto_depIdxs = nil
}
